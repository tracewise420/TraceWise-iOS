name: TraceWise iOS SDK CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    name: Test SDK
    runs-on: macos-latest
    strategy:
      matrix:
        destination:
          - 'iOS Simulator'
          - 'platform=macOS'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: List Available Simulators
      run: |
        xcrun simctl list devices available
        echo "Available runtimes:"
        xcrun simctl list runtimes
        
    - name: Setup iOS Simulator
      run: |
        # Get first available iPhone simulator UUID
        SIMULATOR_ID=$(xcrun simctl list devices available | grep "iPhone" | head -1 | grep -o '[A-F0-9-]\{36\}')
        echo "Using simulator: $SIMULATOR_ID"
        xcrun simctl boot "$SIMULATOR_ID" || true
        echo "SIMULATOR_ID=$SIMULATOR_ID" >> "$GITHUB_ENV"
        
    - name: Swift Build
      run: swift build
      
    - name: Swift Test
      run: swift test --enable-code-coverage
      
    - name: Xcode Test
      run: |
        if [[ "${{ matrix.destination }}" == "iOS Simulator" ]]; then
          xcodebuild test \
            -scheme TraceWiseSDK \
            -destination "platform=iOS Simulator,id=$SIMULATOR_ID" \
            -enableCodeCoverage YES \
            -derivedDataPath DerivedData
        else
          xcodebuild test \
            -scheme TraceWiseSDK \
            -destination '${{ matrix.destination }}' \
            -enableCodeCoverage YES \
            -derivedDataPath DerivedData
        fi
          
    - name: Code Coverage
      if: matrix.destination == 'iOS Simulator'
      run: |
        xcrun llvm-cov export \
          DerivedData/Build/Products/Debug-iphonesimulator/TraceWiseSDKTests.xctest/Contents/MacOS/TraceWiseSDKTests \
          -instr-profile DerivedData/Build/ProfileData/*/Coverage.profdata \
          -format="lcov" > coverage.lcov
          
    - name: Upload Coverage
      if: matrix.destination == 'platform=macOS'
      uses: codecov/codecov-action@v3
      with:
        file: coverage.lcov
        fail_ci_if_error: false
      


  validate-podspec:
    name: Validate CocoaPods
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install CocoaPods
      run: gem install cocoapods
      
    - name: Validate Podspec
      run: pod spec lint TraceWiseSDK.podspec --allow-warnings

  publish-cocoapods:
    name: Publish to CocoaPods
    runs-on: macos-latest
    needs: [test, validate-podspec]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install CocoaPods
      run: gem install cocoapods
      
    - name: Publish to CocoaPods Trunk
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
      run: pod trunk push TraceWiseSDK.podspec --allow-warnings

  create-spm-release:
    name: Validate SPM Release
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Validate Package.swift
      run: swift package resolve
      
    - name: Build Release
      run: swift build -c release